{"ast":null,"code":"var _jsxFileName = \"/Users/sahmed08/Documents/GitHub/CS110Lab4/src/comments/Comment.js\";\nimport CommentForm from \"./CommentForm\";\nimport Comments from \"./Comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comment = _ref => {\n  let {\n    comment,\n    replies,\n    setActiveComment,\n    activeComment,\n    addComment,\n    parentId = null,\n    getReplies\n  } = _ref;\n  const isReplying = activeComment && activeComment.id === comment.id && activeComment.type === \"replying\";\n  const replyId = parentId ? parentId : comment.id; // assign id of parent\n\n  console.log(parentId, comment.id, replyId);\n  const createdAt = new Date(comment.createdAt).toLocaleDateString(); // create date to display \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-right-part\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-author\",\n          children: comment.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-text\",\n        children: comment.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-actions\",\n        onClick: () => setActiveComment({\n          id: comment.id,\n          type: \"replying\",\n          parentId: parentId\n        }),\n        children: \" Reply \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), isReplying && /*#__PURE__*/_jsxDEV(CommentForm, {\n        submitLabel: \"Reply\",\n        handleSubmit: (username, text) => addComment(username, text, replyId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"replies\",\n        children: replies.map(reply => /*#__PURE__*/_jsxDEV(Comment, {\n          comment: reply,\n          setActiveComment: setActiveComment,\n          activeComment: activeComment,\n          addComment: addComment,\n          parentId: comment.id,\n          replies: () => Comment.getReplies(comment.id)\n        }, reply.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, comment.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["CommentForm","Comments","Comment","comment","replies","setActiveComment","activeComment","addComment","parentId","getReplies","isReplying","id","type","replyId","console","log","createdAt","Date","toLocaleDateString","username","body","text","length","map","reply"],"sources":["/Users/sahmed08/Documents/GitHub/CS110Lab4/src/comments/Comment.js"],"sourcesContent":["import CommentForm from \"./CommentForm\";\nimport Comments from \"./Comments\";\n\nconst Comment = ({\n  comment,\n  replies,\n  setActiveComment,\n  activeComment,\n  addComment,\n  parentId = null,\n  getReplies\n}) => {\n  \n  const isReplying =\n    activeComment &&\n    activeComment.id === comment.id &&\n    activeComment.type === \"replying\";\n  \n  const replyId = parentId ? parentId : comment.id; // assign id of parent\n  console.log(parentId, comment.id, replyId);\n  const createdAt = new Date(comment.createdAt).toLocaleDateString(); // create date to display \n\n  return (\n    <div key={comment.id} className=\"comment\">\n      <div className=\"comment-right-part\">\n        <div className=\"comment-content\">\n          <div className=\"comment-author\">{comment.username}</div>\n          <div>{createdAt}</div>\n        </div>\n        <div className=\"comment-text\">{comment.body}</div>\n        <div\n          className=\"comment-actions\"\n          onClick={() => setActiveComment({ id: comment.id, type: \"replying\" , parentId: parentId})  }\n        > Reply </div>\n          \n\n        {isReplying && (\n          <CommentForm\n            submitLabel=\"Reply\"\n           \n            handleSubmit={(username, text) => addComment(username,text, replyId)}\n            \n          />\n        )\n}\n\n        {replies.length > 0 && (\n          <div className=\"replies\">\n            {replies.map((reply) => (\n              <Comment\n                comment={reply}\n                key={reply.id}\n                setActiveComment={setActiveComment}\n                activeComment={activeComment}\n                addComment={addComment}\n                parentId={comment.id}\n                replies={() => Comment.getReplies(comment.id)}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Comment;\n"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAG,QAQV;EAAA,IARW;IACfC,OADe;IAEfC,OAFe;IAGfC,gBAHe;IAIfC,aAJe;IAKfC,UALe;IAMfC,QAAQ,GAAG,IANI;IAOfC;EAPe,CAQX;EAEJ,MAAMC,UAAU,GACdJ,aAAa,IACbA,aAAa,CAACK,EAAd,KAAqBR,OAAO,CAACQ,EAD7B,IAEAL,aAAa,CAACM,IAAd,KAAuB,UAHzB;EAKA,MAAMC,OAAO,GAAGL,QAAQ,GAAGA,QAAH,GAAcL,OAAO,CAACQ,EAA9C,CAPI,CAO8C;;EAClDG,OAAO,CAACC,GAAR,CAAYP,QAAZ,EAAsBL,OAAO,CAACQ,EAA9B,EAAkCE,OAAlC;EACA,MAAMG,SAAS,GAAG,IAAIC,IAAJ,CAASd,OAAO,CAACa,SAAjB,EAA4BE,kBAA5B,EAAlB,CATI,CASgE;;EAEpE,oBACE;IAAsB,SAAS,EAAC,SAAhC;IAAA,uBACE;MAAK,SAAS,EAAC,oBAAf;MAAA,wBACE;QAAK,SAAS,EAAC,iBAAf;QAAA,wBACE;UAAK,SAAS,EAAC,gBAAf;UAAA,UAAiCf,OAAO,CAACgB;QAAzC;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,UAAMH;QAAN;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAK,SAAS,EAAC,cAAf;QAAA,UAA+Bb,OAAO,CAACiB;MAAvC;QAAA;QAAA;QAAA;MAAA,QALF,eAME;QACE,SAAS,EAAC,iBADZ;QAEE,OAAO,EAAE,MAAMf,gBAAgB,CAAC;UAAEM,EAAE,EAAER,OAAO,CAACQ,EAAd;UAAkBC,IAAI,EAAE,UAAxB;UAAqCJ,QAAQ,EAAEA;QAA/C,CAAD,CAFjC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANF,EAYGE,UAAU,iBACT,QAAC,WAAD;QACE,WAAW,EAAC,OADd;QAGE,YAAY,EAAE,CAACS,QAAD,EAAWE,IAAX,KAAoBd,UAAU,CAACY,QAAD,EAAUE,IAAV,EAAgBR,OAAhB;MAH9C;QAAA;QAAA;QAAA;MAAA,QAbJ,EAsBGT,OAAO,CAACkB,MAAR,GAAiB,CAAjB,iBACC;QAAK,SAAS,EAAC,SAAf;QAAA,UACGlB,OAAO,CAACmB,GAAR,CAAaC,KAAD,iBACX,QAAC,OAAD;UACE,OAAO,EAAEA,KADX;UAGE,gBAAgB,EAAEnB,gBAHpB;UAIE,aAAa,EAAEC,aAJjB;UAKE,UAAU,EAAEC,UALd;UAME,QAAQ,EAAEJ,OAAO,CAACQ,EANpB;UAOE,OAAO,EAAE,MAAMT,OAAO,CAACO,UAAR,CAAmBN,OAAO,CAACQ,EAA3B;QAPjB,GAEOa,KAAK,CAACb,EAFb;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA,QAvBJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,GAAUR,OAAO,CAACQ,EAAlB;IAAA;IAAA;IAAA;EAAA,QADF;AA0CD,CA7DD;;KAAMT,O;AA+DN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}